name: Deploy React App

on:
  push:
    branches:
      - main

jobs:
  deploy-react-app:
    name: Build and Deploy React App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Create .env File
        run: |
          if [ -n "${{ secrets.ENV_FILE_B64 }}" ]; then
            echo "Decoding .env file into the cloned repository"
            echo "${{ secrets.ENV_FILE_B64 }}" | base64 --decode > .env
          else
            echo "No ENV_FILE_B64 secret provided. Skipping .env creation."
          fi

      - name: Install Dependencies
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn install

      - name: Build React App
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn build

      - name: Upload App Files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: dist/
          target: "/home/${{ secrets.SERVER_USER }}/temp_web_upload"

      - name: Move Files to /var/www
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo rm -rf /var/www/${{ vars.APP_NAME }}-web
            sudo mv /home/${{ secrets.SERVER_USER }}/temp_web_upload/dist /var/www/${{ vars.APP_NAME }}-web
            sudo chown -R $USER:$USER /var/www/${{ vars.APP_NAME }}-web
            sudo chmod -R 755 /var/www/${{ vars.APP_NAME }}-web
            sudo rm -rf /home/${{ secrets.SERVER_USER }}/temp_web_upload
            echo "Temporary directory cleaned up."

      - name: Reload Nginx
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo systemctl reload nginx
